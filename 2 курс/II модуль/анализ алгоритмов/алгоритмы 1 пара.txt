string bomb_dir; // the direction of the bombs from batman's current location 
        //(U, UR, R, DR, D, DL, L or UL)
        int hu = h/2;
        int hd = h-(h/2);
        int wl = w/2;
        int wr = w-(w/2);
        int w2[2] = {wr, w};
        int w1[2]={0, wl};
        int h1[2]={0, hu};
        int h2[2]={hd, h};
        cin >> bomb_dir; cin.ignore();
        if(bomb_dir=="U"){
            h = h-x0;
            x0 =  h/2;
        } 
        else if(bomb_dir=="D"){
            
        }


#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/

int main()
{
    int w; // width of the building.
    int h; // height of the building.
    cin >> w >> h; cin.ignore();
    int n; // maximum number of turns before game over.
    cin >> n; cin.ignore();
    int x0;
    int y0;
    cin >> x0 >> y0; cin.ignore();

    // game loop
    while (1) {
        string bomb_dir; // the direction of the bombs from batman's current 
        //location (U, UR, R, DR, D, DL, L or UL)
        cin >> bomb_dir; cin.ignore();
        int l=0, r=w, u=0, d=h;
        if(bomb_dir=="U"){
            d=d-x0;
        } 
        else if(bomb_dir=="D"){
            u=x0+1;
        }
        else if (bomb_dir=="R"){
            l=w-y0;
        }
        else if(bomb_dir=="L"){
            r=x0+1;
        }
        else if(bomb_dir=="UL"){
            r=r-x0;
            d=d-y0;
        }
        else if(bomb_dir=="DL"){
            r=r-x0;
            u=u-y0;
        }
        else if(bomb_dir=="UR"){
            l=x0+1;
            d=d-x0
        }
        else if(bomb_dir=="DR"){
            r=r-x0;
        }


        // Write an action using cout. DON'T FORGET THE "<< endl"
        // To debug: cerr << "Debug messages..." << endl;


        // the location of the next window Batman should jump to.
        cout << "0 0" << endl;
    }
}
